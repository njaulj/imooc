#!/usr/bin/env node
var imooc = require('../src');
var opt = require('optimist');
var color = require('colors');
var prettyjson = require('prettyjson');
var fs = require('fs');
var mkdirp = require('mkdirp');
var async = require('async');
var path = require('path');


var argv = opt
    .usage("[Usage]\n\n imooc [command|keyword]\n\nCommands:")
    .argv;

switch (argv._[0]) {
    case 's':
    case 'search':
        argv = opt
            .usage("imooc " + argv._[0] + " [keyword]")
            .argv;

        var keyword = argv._[1];
        if (!keyword || argv.help) {
            opt.showHelp();
            return;
        }
        keyword = keyword.trim();
        imooc.search(keyword, function(err, data) {
            if (err) return imooc.error(err);
            if (data.length == 0) {
                return printLn('暂时没有你要找的课程');
            }
            printLn("搜索 " + keyword.bold + " 共有 " + (data.length + "").bold + " 门相关课程。");
            printLn("");

            data.forEach(function(item) {
                printLn(padString(item.id, 3).grey + " " + item.name.replace(keyword, keyword.bold));
            });
        });
    break;
    case 'l':
    case 'list':
        argv = opt
            .usage('imooc ' + argv._[0] + ' [pageNumber]')
            .argv;
        var page = argv._[1];
        if (argv.help) {
            opt.showHelp();
            return;
        }
        page = page || 1;// 默认显示第一页
        imooc.list(page, function(err, data) {
            if (err) return imooc.error(err);
            if (data.length == 0) {
                return printLn('暂时没有课程');
            }
            printLn('热门课程如下，共有 ' + (data.length+'').bold + ' 门课。');
            printLn("");

            data.forEach(function(item) {
                console.log(prettyjson.render({
                    "课程号": item.id,
                    "课程名称": item.name,
                    "课程描述": item.desc,
                    "时长": (item.duration/(1000*60*60)).toFixed(2) + '小时'
                }));
                printLn("");
            });
        });
    break;
    case 'g':
    case 'get':
        argv = opt
            .usage('imooc ' + argv._[0] + ' courseid [-c 1,2,3]')
            .argv;

        var cid = argv._[1];
        if (!cid || argv.help) {
            opt.showHelp();
            return;
        }

        var chapters = argv.c ? (argv.c+'').split(',') : [],
            destdir = path.join(process.cwd(), cid+'');

        
        async.waterfall([
            function(next) {
                fs.exists(destdir, function(exists) {
                    next(null, exists);
                });
            },
            function(exists, next) {
                if (exists) return next(null);
                mkdirp(destdir, function(err) {
                    next(err);
                })
            }
        ], function(err) {
            if (err) return imooc.error(err);
            imooc.get(cid, chapters, destdir);
        });
    break;
    case 'd':
    case 'display':
        argv = opt
            .usage('imooc ' + argv._[0] + ' courseid')
            .argv;
        var courseid = argv._[1];
        if (!courseid || argv.help) {
            opt.showHelp();
            return;
        }
        imooc.display(courseid, function(err, data) {
            if (data.length == 0) return imooc.error('暂无课程内容');
            printLn('本课程共有' + (data.length+"").bold + ' 章：');
            data.forEach(function(course) {
                printLn('第 ' + course.chapter.seq + ' 章: ' + course.chapter.name);
            });
        });
    break;
    default:
        if (argv.version || argv.v) {
            var json = require('../package.json');
            printLn(json.version);
        } else {
            opt.showHelp();
        }
    break;
}

function padString(str, num) {
    var len = (str+'').length;
    return len < num ? Array(num-len+1).join(' ') + str : str + '';
}

function printLn() {
    var args = [].slice.call(arguments, 0);
    console.log.apply(this, args);
}
